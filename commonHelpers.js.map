{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["// Описаний в документації\nimport flatpickr from 'flatpickr';\n// Додатковий імпорт стилів\nimport 'flatpickr/dist/flatpickr.min.css';\n//\n// import { Notify } from 'notiflix/build/notiflix-notify-aio';\n// Описаний у документації\n// import iziToast from 'izitoast';\n// // Додатковий імпорт стилів\n// import 'izitoast/dist/css/iziToast.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst dateFieldSelector = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('button[data-start]');\n\nconst ref = {\n  days: document.querySelector('[data-days]'),\n  hours: document.querySelector('[data-hours]'),\n  minutes: document.querySelector('[data-minutes]'),\n  seconds: document.querySelector('[data-seconds]'),\n};\n\nlet countDownTime = null;\nlet deltaTime = null;\nlet timerID;\n\nstartBtn.disabled = true;\n\nstartBtn.addEventListener('click', onStart);\n// dateFieldSelector.addEventListener('click', onStop);\n\n// Вибір дати\n\nconst options = {\n  // Вмикає засіб вибору часу\n  enableTime: true,\n  // Відображає засіб вибору часу\n  time_24hr: true,\n  // Встановлює початкові вибрані дати\n  defaultDate: new Date(),\n  // Регулює крок для введення хвилин\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const startDate = new Date();\n    console.log(selectedDates[0]);\n    if (selectedDates[0] - startDate < 0) {\n      startBtn.disabled = true;\n      iziToast.show({\n        title: 'Error',\n        message: 'Please choose a date in the future!',\n        position: 'topCenter',\n        color: 'red',\n      });\n      // Notify.failure('Select the date in the FUTURE');\n    } else {\n      startBtn.disabled = false;\n      countDownTime = selectedDates[0];\n      iziToast.show({\n        title: 'Success',\n        message: 'Lets go?',\n        position: 'topCenter',\n        color: 'green',\n      });\n    }\n  },\n};\n// FetchIt.Message = {\n//   success(message) {\n//     izitoast.success({ message });\n//   },\n//   error(message) {\n//     izitoast.error({ message });\n//   },\n// };\n// Відлік часу\nflatpickr(dateFieldSelector, options);\n\nfunction onStart(evt) {\n  startBtn.disabled = true;\n  dateFieldSelector.disabled = true;\n\n  timerID = setInterval(() => {\n    const currentDate = Date.now();\n    deltaTime = countDownTime - currentDate;\n    const time = convertMs(deltaTime);\n    updateTimer(time);\n  }, 1000);\n}\n\nfunction updateTimer({ days, hours, minutes, seconds }) {\n  if (deltaTime < 0) {\n    clearInterval(timerID);\n    startBtn.disabled = false;\n    dateFieldSelector.disabled = false;\n    return;\n  }\n\n  ref.days.textContent = `${days}`;\n  ref.hours.textContent = `${hours}`;\n  ref.minutes.textContent = `${minutes}`;\n  ref.seconds.textContent = `${seconds}`;\n}\n\n// onClose()\n// window.alert(\"Please choose a date in the future\")\n// startBtn.disabled = true;\n// stopBtn.disabled = false;\n\n// Форматування часу Counting functions\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = pad(Math.floor(ms / day));\n  // Remaining hours\n  const hours = pad(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = pad(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = pad(Math.floor((((ms % day) % hour) % minute) / second));\n\n  return { days, hours, minutes, seconds };\n}\n\nconsole.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\nconsole.log(convertMs(140000)); // {days: 0, hours: 0, minutes: 2, seconds: 20}\nconsole.log(convertMs(24140000)); // {days: 0, hours: 6 minutes: 42, seconds: 20}\n"],"names":["dateFieldSelector","startBtn","ref","countDownTime","deltaTime","timerID","onStart","options","selectedDates","startDate","iziToast","flatpickr","evt","currentDate","time","convertMs","updateTimer","days","hours","minutes","seconds","pad","value","ms"],"mappings":"2IAaA,MAAMA,EAAoB,SAAS,cAAc,kBAAkB,EAC7DC,EAAW,SAAS,cAAc,oBAAoB,EAEtDC,EAAM,CACV,KAAM,SAAS,cAAc,aAAa,EAC1C,MAAO,SAAS,cAAc,cAAc,EAC5C,QAAS,SAAS,cAAc,gBAAgB,EAChD,QAAS,SAAS,cAAc,gBAAgB,CAClD,EAEA,IAAIC,EAAgB,KAChBC,EAAY,KACZC,EAEJJ,EAAS,SAAW,GAEpBA,EAAS,iBAAiB,QAASK,CAAO,EAK1C,MAAMC,EAAU,CAEd,WAAY,GAEZ,UAAW,GAEX,YAAa,IAAI,KAEjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAY,IAAI,KACtB,QAAQ,IAAID,EAAc,CAAC,CAAC,EACxBA,EAAc,CAAC,EAAIC,EAAY,GACjCR,EAAS,SAAW,GACpBS,EAAS,KAAK,CACZ,MAAO,QACP,QAAS,sCACT,SAAU,YACV,MAAO,KACf,CAAO,IAGDT,EAAS,SAAW,GACpBE,EAAgBK,EAAc,CAAC,EAC/BE,EAAS,KAAK,CACZ,MAAO,UACP,QAAS,WACT,SAAU,YACV,MAAO,OACf,CAAO,EAEJ,CACH,EAUAC,EAAUX,EAAmBO,CAAO,EAEpC,SAASD,EAAQM,EAAK,CACpBX,EAAS,SAAW,GACpBD,EAAkB,SAAW,GAE7BK,EAAU,YAAY,IAAM,CAC1B,MAAMQ,EAAc,KAAK,MACzBT,EAAYD,EAAgBU,EAC5B,MAAMC,EAAOC,EAAUX,CAAS,EAChCY,EAAYF,CAAI,CACjB,EAAE,GAAI,CACT,CAEA,SAASE,EAAY,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtD,GAAIhB,EAAY,EAAG,CACjB,cAAcC,CAAO,EACrBJ,EAAS,SAAW,GACpBD,EAAkB,SAAW,GAC7B,MACD,CAEDE,EAAI,KAAK,YAAc,GAAGe,CAAI,GAC9Bf,EAAI,MAAM,YAAc,GAAGgB,CAAK,GAChChB,EAAI,QAAQ,YAAc,GAAGiB,CAAO,GACpCjB,EAAI,QAAQ,YAAc,GAAGkB,CAAO,EACtC,CAQA,SAASC,EAAIC,EAAO,CAClB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CACA,SAASP,EAAUQ,EAAI,CAQrB,MAAMN,EAAOI,EAAI,KAAK,MAAME,EAAK,KAAG,CAAC,EAE/BL,EAAQG,EAAI,KAAK,MAAOE,EAAK,MAAO,IAAI,CAAC,EAEzCJ,EAAUE,EAAI,KAAK,MAAQE,EAAK,MAAO,KAAQ,GAAM,CAAC,EAEtDH,EAAUC,EAAI,KAAK,MAASE,EAAK,MAAO,KAAQ,IAAU,GAAM,CAAC,EAEvE,MAAO,CAAE,KAAAN,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,QAAQ,IAAIL,EAAU,GAAI,CAAC,EAC3B,QAAQ,IAAIA,EAAU,IAAM,CAAC,EAC7B,QAAQ,IAAIA,EAAU,MAAQ,CAAC"}